{"version":3,"sources":["logo.svg","component/Textbox.js","App.js","reportWebVitals.js","index.js"],"names":["Textbox","useState","characterCounts","setCharactercount","wordCounts","setWordcount","textValue","setTextValue","initialText","setinitialText","copyButtonText","setCopyButtonText","className","id","value","placeholder","onChange","e","target","length","numberOfWords","split","onClick","document","querySelector","select","execCommand","window","getSelection","removeAllRanges","capitalizeText","toLowerCase","console","log","newCapitalizeText","map","word","charAt","toUpperCase","slice","join","cawabText","newCawabText","camelcasText","newCamelcasText","App","class","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3ff6bd9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react'\r\n\r\nexport default function Textbox() {\r\n\r\n    const [characterCounts,setCharactercount]=useState(0);\r\n    const [wordCounts,setWordcount]=useState(0);\r\n    const [textValue,setTextValue]=useState(\"\");\r\n    const [initialText,setinitialText]=useState(\"\");\r\n    const [copyButtonText,setCopyButtonText]=useState(\"Copy Text\")\r\n    let capitalize=()=>{\r\n        let capitalizeText=initialText.toLowerCase().split(' ');\r\n        console.log(capitalizeText);\r\n        let newCapitalizeText=capitalizeText.map(function(word) {\r\n            return (word.charAt(0).toUpperCase() + word.slice(1));\r\n          }).join(' ');\r\n          console.log(newCapitalizeText);\r\n          setTextValue(newCapitalizeText);\r\n    }\r\n    let lowercase=()=>{\r\n        console.log(textValue);\r\n        setTextValue(textValue.toLowerCase());\r\n    }\r\n    let cawabcase=()=>{\r\n        let cawabText=initialText.toLowerCase().split(' ');\r\n        console.log(cawabText);\r\n        let newCawabText=cawabText.join('-');\r\n          console.log(newCawabText);\r\n          setTextValue(newCawabText);\r\n    }\r\n    let camelcase=()=>{\r\n        let camelcasText=initialText.toLowerCase().split(' ');\r\n        console.log(camelcasText);\r\n        let newCamelcasText=camelcasText.map(function(word) {\r\n            return (word.charAt(0).toUpperCase() + word.slice(1));\r\n          }).join('');;\r\n          console.log(newCamelcasText);\r\n          setTextValue(newCamelcasText);\r\n    }\r\n    let capital=()=>{\r\n        setTextValue(initialText.toUpperCase());\r\n    }\r\n    let initial=()=>{\r\n        setTextValue(initialText);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-12 col-sm-12 col-md-9\">\r\n        <div className=\"container text-box\">\r\n            <textarea id=\"text-area\" value={textValue} className=\"text-area\" placeholder=\"Write your text here...\" onChange={(e)=>{\r\n                setCharactercount(e.target.value.length);\r\n                let words=e.target.value.split(\" \") ;\r\n                let numberOfWords=words.length;\r\n                setWordcount(numberOfWords); \r\n                setTextValue(e.target.value);\r\n                setinitialText(e.target.value);\r\n                setCopyButtonText(\"Copy\");\r\n            \r\n            }} ></textarea> \r\n            <div className=\"d-flex justify-content-between\">\r\n                <p className=\"m-3\"><strong>No. Of characters :</strong> {characterCounts}</p>\r\n                <p className=\"m-3\"><strong>No. Of Words :</strong> {wordCounts}</p>\r\n                <button className=\"btn button-primary\" onClick={(e)=>{\r\n                    var copyText = document.querySelector(\"#text-area\");\r\n                    copyText.select();\r\n                    document.execCommand(\"copy\");\r\n                    setCopyButtonText(\"Copied\");\r\n                    window.getSelection().removeAllRanges();\r\n                }}>{copyButtonText} </button>\r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"col-12 col-sm-12 col-md-3\">\r\n                <div className=\"functional-group\">\r\n                <h1 className=\"text-center\">Play with Texts</h1>\r\n                    <div className=\"text-center utility-buttons \">\r\n                        <button className=\"btn button-secondary\" onClick={capitalize}> Capitalize </button>\r\n                        <button className=\"btn button-secondary\" onClick={lowercase}> lower case </button>\r\n                        <button className=\"btn button-secondary\" onClick={cawabcase}> cawab-case </button>\r\n                        <button className=\"btn button-secondary\" onClick={camelcase}> CamelCase </button>\r\n                        <button className=\"btn button-secondary\" onClick={capital}> CAPITAL </button>\r\n                        <button className=\"btn button-secondary\" onClick={initial}> Original </button>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Textbox from './component/Textbox';\n\nfunction App() {\n  return (\n   <>\n    <div className=\"row\"> \n            <Textbox className=\"m-3\"></Textbox>\n    </div>\n    <div class=\"fixed-bottom\">\n    <div class=\"footer bg-green\">\n      <div className=\"text-center text-white\">\n          <p>Made with ‚ù§ by <a href=\"#\"><strong>Neeraj </strong></a></p>\n          <div className=\"social-icons text-white\">\n          <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-github\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-linkedin-in\"></i></a>\n          </div>\n      </div>\n    </div>\n    </div>\n    \n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}